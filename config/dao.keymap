/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    chosen {
        zmk,physical_layout = &dao_crkbd_layout;

        // zmk,physical_layout = &dao_full_layout;
    };
};

// @  ?  "  &  |   [  :  {   ^  $  #  ~   <  >  ;  '  ,  .  /  }
// 64 63 34 38 124 91 58 123 94 36 35 126 60 62 59 39 44 46 47 125

/ {
    behaviors {
        parenthesis: parenthesis {
            compatible = "zmk,behavior-tap-dance";
            label = "PARENTHESIS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        brackets: brackets {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKETS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        braces: braces {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACES";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp DEL       &kp Q       &kp W       &kp E        &kp R         &kp T       &kp Y          &kp U        &kp I           &kp O       &kp P          &kp LBKT
&kp TAB       &mt LALT A  &mt LGUI S  &mt LCTRL D  &mt LSHIFT F  &kp G       &kp H          &mt RSHFT J  &mt RCTRL K     &mt RGUI L  &mt RALT SEMI  &kp SQT
&kp LS(LALT)  &kp Z       &kp X       &kp C        &kp V         &kp B       &kp N          &kp M        &kp COMMA       &kp DOT     &kp FSLH       &kp RBKT
                                      &lt 1 ESC    &lt 2 SPACE   &lt 3 BSPC  &mt LALT BSPC  &lt 4 SPACE  &mt RSHIFT RET
            >;
        };

        nav {
            bindings = <
&kp LS(LA(LC(DEL)))    &kp LS(LA(LC(Q)))                   &kp LS(LA(LC(W)))   &kp LS(LA(LC(E)))        &kp LS(LA(LC(R)))        &kp LA(LC(LS(T)))  &trans        &kp HOME       &kp END       &trans     &trans  &trans
&kp LC(LA(LS(TAB)))    &mt LS(LA(LC(LALT))) LS(LA(LC(A)))  &mt LGUI LG(LS(S))  &mt LCTRL LS(LA(LC(D)))  &mt LSHFT LA(LC(LS(F)))  &kp LS(LA(LC(G)))  &kp LEFT      &kp DOWN       &kp UP_ARROW  &kp RIGHT  &trans  &trans
&kp LS(LA(LC(GRAVE)))  &kp LS(LA(LC(Z)))                   &kp LS(LC(LA(X)))   &kp LC(LA(LS(C)))        &kp LC(LA(LS(V)))        &kp LS(LA(LC(B)))  &trans        &kp PG_UP      &kp PG_DN     &trans     &trans  &trans
                                                                               &trans                   &trans                   &trans             &kp LG(LEFT)  &kp LG(RIGHT)  &trans
            >;
        };

        num {
            bindings = <
&trans      &kp EQUAL         &kp N7  &kp N8  &kp N9  &kp N0         &trans    &kp HOME        &kp END       &trans          &trans        &trans
&caps_word  &mt LALT KP_PLUS  &kp N4  &kp N5  &kp N6  &kp KP_MINUS   &kp LEFT  &mt RSHFT DOWN  &mt RCTRL UP  &mt RGUI RIGHT  &kp RALT      &trans
&kp KP_DOT  &kp KP_ASTERISK   &kp N1  &kp N2  &kp N3  &kp KP_DIVIDE  &trans    &kp PG_UP       &kp PG_DN     &kp KP_DOT      &kp KP_SLASH  &trans
                                      &trans  &trans  &trans         &trans    &mo 5           &trans
            >;
        };

        sys {
            bindings = <
&trans       &kp LA(F4)      &kp LG(LC(LEFT))  &kp LG(UP)      &kp LG(LC(RIGHT))  &kp LC(LA(TAB))  &kp F1      &kp F2      &kp F3             &kp F4        &kp F5      &kp F6
&kp LG(TAB)  &kp F2          &kp LG(LEFT)      &kp LG(DOWN)    &kp LG(RIGHT)      &sl 6            &kp F7      &kp F8      &kp F9             &kp F10       &kp F11     &kp F12
&trans       &kp LA(LC(N1))  &kp LA(LC(N2))    &kp LC(LA(N3))  &kp LA(LC(N4))     &kp LA(LC(N5))   &kp C_NEXT  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &kp C_PREV  &tog 8
                                               &trans          &trans             &trans           &mo 7       &kp C_PP    &trans
            >;
        };

        sym {
            bindings = <
&kp GRAVE   &kp AT       &kp QMARK        &kp EXCL   &kp DQT    &parenthesis  &kp EQUAL  &kp CARET     &kp DLLR   &kp POUND   &trans        &kp RPAR
&caps_word  &kp KP_PLUS  &kp KP_ASTERISK  &kp AMPS   &kp PIPE   &brackets     &kp TILDE  &kp KP_MINUS  &kp LT     &kp GT      &kp SEMI      &kp RBKT
&trans      &trans       &trans           &kp COLON  &kp PRCNT  &braces       &kp UNDER  &kp SQT       &kp COMMA  &kp KP_DOT  &kp KP_SLASH  &kp RBRC
                                          &kp BSLH   &mo 5      &trans        &trans     &trans        &trans
            >;
        };

        sym-rus {
            bindings = <
&none      &none        &kp LS(N7)       &kp EXCL    &kp LS(N2)  &kp LPAR  &kp EQUAL  &none         &none          &none      &trans        &kp RPAR
&trans     &kp KP_PLUS  &kp KP_MULTIPLY  &none       &none       &none     &none      &kp KP_MINUS  &none          &none      &kp LS(N4)    &none
&kp SLASH  &trans       &trans           &kp LS(N6)  &kp PRCNT   &none     &kp UNDER  &none         &kp LS(SLASH)  &kp SLASH  &kp KP_SLASH  &none
                                         &kp BSLH    &trans      &trans    &trans     &trans        &trans
            >;
        };

        win-move {
            bindings = <
&trans  &trans          &kp LS(LG(LEFT))  &trans          &kp LS(LG(RIGHT))  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans            &trans          &trans             &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LC(LG(N1))  &kp LC(LG(N2))    &kp LC(LG(N3))  &kp LC(LG(N4))     &kp LC(LG(N5))  &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans          &trans             &trans          &trans  &trans  &trans
            >;
        };

        bt {
            bindings = <
&trans  &trans  &trans  &trans      &trans  &trans  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &trans
&trans  &trans  &trans  &trans      &trans  &trans  &trans         &trans         &trans         &trans         &trans         &bt BT_CLR
&trans  &trans  &trans  &trans      &trans  &trans  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &bt BT_CLR_ALL
                        &sys_reset  &trans  &trans  &trans         &trans         &sys_reset
            >;
        };

        GAME {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E    &kp R      &kp T       &kp Y     &kp U      &kp I      &kp O    &kp P     &kp LBKT
&kp LSHFT  &kp A  &kp S  &kp D    &kp F      &kp G       &kp H     &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C    &kp V      &kp B       &kp N     &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RBKT
                         &kp ESC  &kp SPACE  &lt 3 BSPC  &kp LALT  &kp SPACE  &kp ENTER
            >;
        };
    };
};
